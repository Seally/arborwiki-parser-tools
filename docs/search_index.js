(function () {
  window.DENO_DOC_SEARCH_INDEX = {"nodes":[{"kind":["class"],"name":"SimpleLexer","file":".","doc":"A very basic lexer that simply just takes string and `RegExp` patterns and\nspits out the associated tokens with no advanced bells and whistles.\n","location":{"filename":"","line":104,"col":0,"byteIndex":2705},"url":"././~/SimpleLexer.html","category":"","declarationKind":"export","deprecated":false},{"kind":["typeAlias"],"name":"SimpleLexerDefinitions","file":".","doc":"Type representing acceptable formats to define token definitions for a\n`SimpleLexer`","location":{"filename":"","line":29,"col":0,"byteIndex":808},"url":"././~/SimpleLexerDefinitions.html","category":"","declarationKind":"export","deprecated":false},{"kind":["typeAlias"],"name":"SimpleLexerToken","file":".","doc":"A token generated by `SimpleLexer`.","location":{"filename":"","line":50,"col":0,"byteIndex":1464},"url":"././~/SimpleLexerToken.html","category":"","declarationKind":"export","deprecated":false},{"kind":["typeAlias"],"name":"SimpleLexerTokenDefinition","file":".","doc":"A definition for a token type for `SimpleLexer`.","location":{"filename":"","line":6,"col":0,"byteIndex":112},"url":"././~/SimpleLexerTokenDefinition.html","category":"","declarationKind":"export","deprecated":false},{"kind":["function"],"name":"escapeRegExp","file":".","doc":"Escape the string for insertion into a `RegExp` pattern without special\nmeanings.\n\nThe output of this function should **NOT** be placed inside a character class\nor other weird, non-concatenable positions of a `RegExp`.\n\nThe characters escaped are: `^ $ \\ . * + ? ( ) [ ] { } |`\n\n_Source:_ https://tc39.es/ecma262/#prod-SyntaxCharacter","location":{"filename":"","line":18,"col":0,"byteIndex":528},"url":"././~/escapeRegExp.html","category":"","declarationKind":"export","deprecated":false}]};
})()